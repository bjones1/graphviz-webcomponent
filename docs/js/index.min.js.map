{"version":3,"file":"index.min.js","sources":["../src/graph.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/dom.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/template.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/modify-template.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/directive.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/part.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/template-instance.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/template-result.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/parts.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/template-factory.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/render.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/default-template-processor.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lit-html.js","../node_modules/.pnpm/lit-html@1.2.1/node_modules/lit-html/lib/shady-render.js","../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lib/updating-element.js","../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lib/css-tag.js","../node_modules/.pnpm/lit-element@2.3.1/node_modules/lit-element/lit-element.js","../src/codejar/codejar.js","../src/prism/prism-core.js","../src/prism/prism-line-numbers.js","../src/prism/prism-match-braces.js","../src/prism/prism-graphviz.js","../src/script-editor.js"],"sourcesContent":["const graphKey = Symbol('graph')\nconst scaleKey = Symbol('scale')\nconst { delayWorkerLoading } = window.graphvizWebComponent || {}\nlet renderer, rendererUrl, wasmFolder\n\nif (!delayWorkerLoading) getRenderer()\n\nfunction ensureConfiguration () {\n  if (!rendererUrl) {\n    ({\n      rendererUrl = 'https://unpkg.com/graphviz-webcomponent@0.4.0/dist/renderer.min.js',\n      wasmFolder = 'https://unpkg.com/@hpcc-js/wasm@0.3.14/dist'\n    } = window.graphvizWebComponent || {})\n  }\n}\n\nfunction getRenderer () {\n  if (!renderer) {\n    ensureConfiguration()\n    renderer = new Worker(rendererUrl)\n  }\n  return renderer\n}\n\nfunction requestRendering (element, script, receiveResult) {\n  const renderer = getRenderer()\n  renderer.addEventListener('message', receiveResult)\n  const localWasmFolder = element.getAttribute('wasmFolder')\n  if (localWasmFolder) {\n    console.warn('Stop using the deprecated \"wasmFolder\" attribute. Set the global variable \"graphvizWebComponent.wasmFolder\" instead.')\n    wasmFolder = localWasmFolder\n  } else {\n    ensureConfiguration()\n  }\n  renderer.postMessage({ script: script || element.graph, wasmFolder })\n  wasmFolder = undefined\n}\n\nfunction closeRendering (receiveResult) {\n  const renderer = getRenderer()\n  renderer.removeEventListener('message', receiveResult)\n}\n\nfunction triggerEvent (element, type, detail) {\n  element.dispatchEvent(new CustomEvent(type, { detail }))\n}\n\nfunction applyScale (element) {\n  const svg = element.shadowRoot.children[0]\n  const scale = element[scaleKey]\n  if (svg && scale) {\n    svg.style.transform = `scale(${scale})`\n    svg.style.transformOrigin = 'top left'\n  }\n}\n\nfunction showImage (element, svg) {\n  element.shadowRoot.innerHTML = svg\n  applyScale(element)\n  triggerEvent(element, 'render', svg)\n}\n\nfunction showError (element, error) {\n  console.error('Graphviz failed:', error)\n  element.shadowRoot.innerHTML = error.message\n  return triggerEvent(element, 'error', error)\n}\n\nfunction updateGraph (element) {\n  element.shadowRoot.innerHTML = ''\n  if (!element.graph) return\n  requestRendering(element, undefined, receiveResult)\n\n  function receiveResult ({ data }) {\n    const { svg, error } = data\n    closeRendering(receiveResult)\n    if (error) {\n      error.message = error.message.trim()\n      return showError(element, error)\n    }\n    showImage(element, svg)\n  }\n}\n\nfunction tryUpdateGraph (element, script) {\n  return new Promise((resolve, reject) => {\n    if (!script) {\n      element[graphKey] = ''\n      element.shadowRoot.innerHTML = ''\n      return resolve()\n    }\n    requestRendering(element, script, receiveResult)\n\n    function receiveResult ({ data }) {\n      const { svg, error } = data\n      closeRendering(receiveResult)\n      if (error) return reject(error)\n      element[graphKey] = script\n      showImage(element, svg)\n      resolve(svg)\n    }\n  })\n}\n\nclass GraphvizGraphElement extends HTMLElement {\n  constructor () {\n    super()\n    this.attachShadow({ mode: 'open' })\n  }\n\n  get graph () { return this[graphKey] }\n  set graph (value) { this.setAttribute('graph', value) }\n\n  get scale () { return this[scaleKey] }\n  set scale (value) { this.setAttribute('scale', value) }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    switch (name) {\n      case 'graph':\n        this[graphKey] = newValue\n        updateGraph(this)\n        break\n      case 'scale':\n        this[scaleKey] = newValue\n        applyScale(this)\n    }\n  }\n\n  tryGraph (graph) {\n    return tryUpdateGraph(this, graph)\n  }\n\n  static get observedAttributes () { return ['graph', 'scale'] }\n}\n\ncustomElements.define('graphviz-graph', GraphvizGraphElement)\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","export function CodeJar(editor, highlight, opt = {}) {\n    const options = Object.assign({ tab: \"\\t\", ownerRoot: window }, opt);\n    // only Chrome supports shadowRoot.getSelection\n    if (typeof options.ownerRoot.getSelection !== 'function') {\n        options.ownerRoot = options.ownerRoot.ownerDocument;\n        if (typeof options.ownerRoot.getSelection !== 'function') {\n            throw new Error('Impossible to access text selections.');\n        }\n    }\n    let listeners = [];\n    let history = [];\n    let at = -1;\n    let focus = false;\n    let callback;\n    let prev; // code content prior keydown event\n    let isFirefox = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1;\n    editor.setAttribute(\"contentEditable\", isFirefox ? \"true\" : \"plaintext-only\");\n    editor.setAttribute(\"spellcheck\", \"false\");\n    editor.style.outline = \"none\";\n    editor.style.overflowWrap = \"break-word\";\n    editor.style.overflowY = \"auto\";\n    editor.style.resize = \"vertical\";\n    editor.style.whiteSpace = \"pre-wrap\";\n    highlight(editor);\n    const debounceHighlight = debounce(() => {\n        const pos = save();\n        highlight(editor);\n        restore(pos);\n    }, 30);\n    let recording = false;\n    const shouldRecord = (event) => {\n        return !isUndo(event) && !isRedo(event)\n            && event.key !== \"Meta\"\n            && event.key !== \"Control\"\n            && event.key !== \"Alt\"\n            && !event.key.startsWith(\"Arrow\");\n    };\n    const debounceRecordHistory = debounce((event) => {\n        if (shouldRecord(event)) {\n            recordHistory();\n            recording = false;\n        }\n    }, 300);\n    const on = (type, fn) => {\n        listeners.push([type, fn]);\n        editor.addEventListener(type, fn);\n    };\n    on(\"keydown\", event => {\n        if (event.defaultPrevented)\n            return;\n        prev = toString();\n        handleNewLine(event);\n        handleTabCharacters(event);\n        handleJumpToBeginningOfLine(event);\n        handleSelfClosingCharacters(event);\n        handleUndoRedo(event);\n        if (shouldRecord(event) && !recording) {\n            recordHistory();\n            recording = true;\n        }\n    });\n    on(\"keyup\", event => {\n        if (event.defaultPrevented)\n            return;\n        if (event.isComposing)\n            return;\n        if (prev !== toString())\n            debounceHighlight();\n        debounceRecordHistory(event);\n        if (callback)\n            callback(toString());\n    });\n    on(\"focus\", _event => {\n        focus = true;\n    });\n    on(\"blur\", _event => {\n        focus = false;\n    });\n    on(\"paste\", event => {\n        recordHistory();\n        handlePaste(event);\n        recordHistory();\n        if (callback)\n            callback(toString());\n    });\n    function save() {\n        const s = options.ownerRoot.getSelection();\n        const pos = { start: 0, end: 0, dir: undefined };\n        visit(editor, el => {\n            if (el === s.anchorNode && el === s.focusNode) {\n                pos.start += s.anchorOffset;\n                pos.end += s.focusOffset;\n                pos.dir = s.anchorOffset <= s.focusOffset ? \"->\" : \"<-\";\n                return \"stop\";\n            }\n            if (el === s.anchorNode) {\n                pos.start += s.anchorOffset;\n                if (!pos.dir) {\n                    pos.dir = \"->\";\n                }\n                else {\n                    return \"stop\";\n                }\n            }\n            else if (el === s.focusNode) {\n                pos.end += s.focusOffset;\n                if (!pos.dir) {\n                    pos.dir = \"<-\";\n                }\n                else {\n                    return \"stop\";\n                }\n            }\n            if (el.nodeType === Node.TEXT_NODE) {\n                if (pos.dir != \"->\")\n                    pos.start += el.nodeValue.length;\n                if (pos.dir != \"<-\")\n                    pos.end += el.nodeValue.length;\n            }\n        });\n        return pos;\n    }\n    function restore(pos) {\n        const s = options.ownerRoot.getSelection();\n        let startNode, startOffset = 0;\n        let endNode, endOffset = 0;\n        if (!pos.dir)\n            pos.dir = \"->\";\n        if (pos.start < 0)\n            pos.start = 0;\n        if (pos.end < 0)\n            pos.end = 0;\n        // Flip start and end if the direction reversed\n        if (pos.dir == \"<-\") {\n            const { start, end } = pos;\n            pos.start = end;\n            pos.end = start;\n        }\n        let current = 0;\n        visit(editor, el => {\n            if (el.nodeType !== Node.TEXT_NODE)\n                return;\n            const len = (el.nodeValue || \"\").length;\n            if (current + len >= pos.start) {\n                if (!startNode) {\n                    startNode = el;\n                    startOffset = pos.start - current;\n                }\n                if (current + len >= pos.end) {\n                    endNode = el;\n                    endOffset = pos.end - current;\n                    return \"stop\";\n                }\n            }\n            current += len;\n        });\n        // If everything deleted place cursor at editor\n        if (!startNode)\n            startNode = editor;\n        if (!endNode)\n            endNode = editor;\n        // Flip back the selection\n        if (pos.dir == \"<-\") {\n            [startNode, startOffset, endNode, endOffset] = [endNode, endOffset, startNode, startOffset];\n        }\n        s.setBaseAndExtent(startNode, startOffset, endNode, endOffset);\n    }\n    function beforeCursor() {\n        const s = options.ownerRoot.getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setEnd(r0.startContainer, r0.startOffset);\n        return r.toString();\n    }\n    function afterCursor() {\n        const s = options.ownerRoot.getSelection();\n        const r0 = s.getRangeAt(0);\n        const r = document.createRange();\n        r.selectNodeContents(editor);\n        r.setStart(r0.endContainer, r0.endOffset);\n        return r.toString();\n    }\n    function handleNewLine(event) {\n        if (event.key === \"Enter\") {\n            const before = beforeCursor();\n            const after = afterCursor();\n            let [padding] = findPadding(before);\n            let newLinePadding = padding;\n            // If last symbol is \"{\" ident new line\n            if (before[before.length - 1] === \"{\") {\n                newLinePadding += options.tab;\n            }\n            if (isFirefox) {\n                preventDefault(event);\n                insert(\"\\n\" + newLinePadding);\n            }\n            else {\n                // Normal browsers\n                if (newLinePadding.length > 0) {\n                    preventDefault(event);\n                    insert(\"\\n\" + newLinePadding);\n                }\n            }\n            // Place adjacent \"}\" on next line\n            if (newLinePadding !== padding && after[0] === \"}\") {\n                const pos = save();\n                insert(\"\\n\" + padding);\n                restore(pos);\n            }\n        }\n    }\n    function handleSelfClosingCharacters(event) {\n        const open = `([{'\"`;\n        const close = `)]}'\"`;\n        const codeAfter = afterCursor();\n        if (close.includes(event.key) && codeAfter.substr(0, 1) === event.key) {\n            const pos = save();\n            preventDefault(event);\n            pos.start = ++pos.end;\n            restore(pos);\n        }\n        else if (open.includes(event.key)) {\n            const pos = save();\n            preventDefault(event);\n            const text = event.key + close[open.indexOf(event.key)];\n            insert(text);\n            pos.start = ++pos.end;\n            restore(pos);\n        }\n    }\n    function handleTabCharacters(event) {\n        if (event.key === \"Tab\") {\n            preventDefault(event);\n            if (event.shiftKey) {\n                const before = beforeCursor();\n                let [padding, start,] = findPadding(before);\n                if (padding.length > 0) {\n                    const pos = save();\n                    // Remove full length tab or just remaining padding\n                    const len = Math.min(options.tab.length, padding.length);\n                    restore({ start, end: start + len });\n                    document.execCommand(\"delete\");\n                    pos.start -= len;\n                    pos.end -= len;\n                    restore(pos);\n                }\n            }\n            else {\n                insert(options.tab);\n            }\n        }\n    }\n    function handleJumpToBeginningOfLine(event) {\n        if (event.key === \"ArrowLeft\" && event.metaKey) {\n            preventDefault(event);\n            const before = beforeCursor();\n            let [padding, start, end] = findPadding(before);\n            if (before.endsWith(padding)) {\n                if (event.shiftKey) {\n                    const pos = save();\n                    restore({ start, end: pos.end }); // Select from line start.\n                }\n                else {\n                    restore({ start, end: start }); // Jump to line start.\n                }\n            }\n            else {\n                if (event.shiftKey) {\n                    const pos = save();\n                    restore({ start: end, end: pos.end }); // Select from beginning of text.\n                }\n                else {\n                    restore({ start: end, end }); // Jump to beginning of text.\n                }\n            }\n        }\n    }\n    function handleUndoRedo(event) {\n        if (isUndo(event)) {\n            preventDefault(event);\n            at--;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at < 0)\n                at = 0;\n        }\n        if (isRedo(event)) {\n            preventDefault(event);\n            at++;\n            const record = history[at];\n            if (record) {\n                editor.innerHTML = record.html;\n                restore(record.pos);\n            }\n            if (at >= history.length)\n                at--;\n        }\n    }\n    function recordHistory() {\n        if (!focus)\n            return;\n        const html = editor.innerHTML;\n        const pos = save();\n        const lastRecord = history[at];\n        if (lastRecord) {\n            if (lastRecord.html === html\n                && lastRecord.pos.start === pos.start\n                && lastRecord.pos.end === pos.end)\n                return;\n        }\n        at++;\n        history[at] = { html, pos };\n        history.splice(at + 1);\n        const maxHistory = 300;\n        if (at > maxHistory) {\n            at = maxHistory;\n            history.splice(0, 1);\n        }\n    }\n    function handlePaste(event) {\n        preventDefault(event);\n        const text = (event.originalEvent || event).clipboardData.getData(\"text/plain\");\n        const pos = save();\n        insert(text);\n        highlight(editor);\n        restore({ start: pos.end + text.length, end: pos.end + text.length });\n    }\n    function visit(editor, visitor) {\n        const queue = [];\n        if (editor.firstChild)\n            queue.push(editor.firstChild);\n        let el = queue.pop();\n        while (el) {\n            if (visitor(el) === \"stop\")\n                break;\n            if (el.nextSibling)\n                queue.push(el.nextSibling);\n            if (el.firstChild)\n                queue.push(el.firstChild);\n            el = queue.pop();\n        }\n    }\n    function isCtrl(event) {\n        return event.metaKey || event.ctrlKey;\n    }\n    function isUndo(event) {\n        return isCtrl(event) && !event.shiftKey && event.code === \"KeyZ\";\n    }\n    function isRedo(event) {\n        return isCtrl(event) && event.shiftKey && event.code === \"KeyZ\";\n    }\n    function insert(text) {\n        text = text\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n        document.execCommand(\"insertHTML\", false, text);\n    }\n    function debounce(cb, wait) {\n        let timeout = 0;\n        return (...args) => {\n            clearTimeout(timeout);\n            timeout = window.setTimeout(() => cb(...args), wait);\n        };\n    }\n    function findPadding(text) {\n        // Find beginning of previous line.\n        let i = text.length - 1;\n        while (i >= 0 && text[i] !== \"\\n\")\n            i--;\n        i++;\n        // Find padding of the line.\n        let j = i;\n        while (j < text.length && /[ \\t]/.test(text[j]))\n            j++;\n        return [text.substring(i, j) || \"\", i, j];\n    }\n    function toString() {\n        return editor.textContent || \"\";\n    }\n    function preventDefault(event) {\n        event.preventDefault();\n    }\n    return {\n        updateOptions(options) {\n            options = Object.assign(Object.assign({}, options), options);\n        },\n        updateCode(code) {\n            editor.textContent = code;\n            highlight(editor);\n        },\n        onUpdate(cb) {\n            callback = cb;\n        },\n        toString,\n        destroy() {\n            for (let [type, fn] of listeners) {\n                editor.removeEventListener(type, fn);\n            }\n        },\n    };\n}\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _\nexport default _ = {\n\tcodeTag: 'code',\n\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightElement: function(element, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {boolean} [oneshot=false]\n * @param {string} [target]\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, oneshot, target) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pattern = patterns[j],\n\t\t\t\tinside = pattern.inside,\n\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = pattern.alias;\n\n\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || (typeof k.value === 'string' && !k.prev.value.greedy));\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + match.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\n\t\t\t\tif (removeCount > 1)\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, true, token + ',' + j);\n\n\t\t\t\tif (oneshot)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n */\n\n/**\n * @template T\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n","import Prism from './prism-core'\n\n/**\n * Plugin name which is used as a class name for <pre> which is activating the plugin\n * @type {String}\n */\nvar PLUGIN_NAME = 'line-numbers';\n\n/**\n * Regular expression used for determining line breaks\n * @type {RegExp}\n */\nvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n/**\n * Resizes line numbers spans according to height of line of code\n * @param {Element} element <pre> element\n */\nvar _resizeElement = function (element) {\n\tvar codeStyles = getStyles(element);\n\tvar whiteSpace = codeStyles['white-space'];\n\n\tif (whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line') {\n\t\tvar codeElement = element.querySelector(Prism.codeTag);\n\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\tif (!lineNumberSizer) {\n\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t}\n\n\t\tlineNumberSizer.style.display = 'block';\n\n\t\tcodeLines.forEach(function (line, lineNumber) {\n\t\t\tlineNumberSizer.textContent = line || '\\n';\n\t\t\tvar lineSize = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumbersWrapper.children[lineNumber].style.height = lineSize + 'px';\n\t\t});\n\n\t\tlineNumberSizer.textContent = '';\n\t\tlineNumberSizer.style.display = 'none';\n\t}\n};\n\n/**\n * Returns style declarations for the element\n * @param {Element} element\n */\nvar getStyles = function (element) {\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n};\n\nPrism.hooks.add('complete', function (env) {\n\tif (!env.code) {\n\t\treturn;\n\t}\n\n\tvar code = env.element;\n\tvar pre = code.parentNode;\n\n\t// works only for <code> wrapped inside <pre> (not inline)\n\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\treturn;\n\t}\n\n\t// Abort if line numbers already exists\n\tif (code.querySelector('.line-numbers-rows')) {\n\t\treturn;\n\t}\n\n\tvar addLineNumbers = false;\n\tvar lineNumbersRegex = /(?:^|\\s)line-numbers(?:\\s|$)/;\n\n\tfor (var element = code; element; element = element.parentNode) {\n\t\tif (lineNumbersRegex.test(element.className)) {\n\t\t\taddLineNumbers = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\tif (!addLineNumbers) {\n\t\treturn;\n\t}\n\n\t// Remove the class 'line-numbers' from the <code>\n\tcode.className = code.className.replace(lineNumbersRegex, ' ');\n\t// Add the class 'line-numbers' to the <pre>\n\tif (!lineNumbersRegex.test(pre.className)) {\n\t\tpre.className += ' line-numbers';\n\t}\n\n\tvar match = env.code.match(NEW_LINE_EXP);\n\tvar linesNum = match ? match.length + 1 : 1;\n\tvar lineNumbersWrapper;\n\n\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\tlineNumbersWrapper = document.createElement('span');\n\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\tlineNumbersWrapper.className = 'line-numbers-rows';\n\tlineNumbersWrapper.innerHTML = lines;\n\n\tif (pre.hasAttribute('data-start')) {\n\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t}\n\n\tenv.element.appendChild(lineNumbersWrapper);\n\n\t_resizeElement(pre);\n\n\tPrism.hooks.run('line-numbers', env);\n});\n\nPrism.hooks.add('line-numbers', function (env) {\n\tenv.plugins = env.plugins || {};\n\tenv.plugins.lineNumbers = true;\n});\n\n/**\n * Global exports\n */\nPrism.plugins.lineNumbers = {\n\t/**\n\t * Update line numbers after resizing the text area by mouse\n\t * @param {Element} element pre element\n\t * @return {undefined}\n\t */\n\tupdateLineNumbers: function(element) {\n\t\t_resizeElement(element);\n\t},\n\t/**\n\t * Get node for provided line number\n\t * @param {Element} element pre element\n\t * @param {Number} number line number\n\t * @return {Element|undefined}\n\t */\n\tgetLine: function (element, number) {\n\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\tif (number < lineNumberStart) {\n\t\t\tnumber = lineNumberStart;\n\t\t}\n\t\tif (number > lineNumberEnd) {\n\t\t\tnumber = lineNumberEnd;\n\t\t}\n\n\t\tvar lineIndex = number - lineNumberStart;\n\n\t\treturn lineNumberRows.children[lineIndex];\n\t}\n};\n","import Prism from './prism-core'\n\nvar MATCH_ALL_CLASS = /(?:^|\\s)match-braces(?:\\s|$)/;\n\nvar BRACE_HOVER_CLASS = /(?:^|\\s)brace-hover(?:\\s|$)/;\nvar BRACE_SELECTED_CLASS = /(?:^|\\s)brace-selected(?:\\s|$)/;\n\nvar NO_BRACE_HOVER_CLASS = /(?:^|\\s)no-brace-hover(?:\\s|$)/;\nvar NO_BRACE_SELECT_CLASS = /(?:^|\\s)no-brace-select(?:\\s|$)/;\n\nvar PARTNER = {\n\t'(': ')',\n\t'[': ']',\n\t'{': '}',\n};\n\nvar NAMES = {\n\t'(': 'brace-round',\n\t'[': 'brace-square',\n\t'{': 'brace-curly',\n};\n\nvar LEVEL_WARP = 12;\n\nvar pairIdCounter = 0;\n\nvar BRACE_ID_PATTERN = /^(pair-\\d+-)(open|close)$/;\n\n/**\n * Returns the brace partner given one brace of a brace pair.\n *\n * @param {HTMLElement} brace\n * @returns {HTMLElement}\n */\nfunction getPartnerBrace(brace) {\n\tvar match = BRACE_ID_PATTERN.exec(brace.id);\n\treturn brace.parentElement.querySelector('#' + match[1] + (match[2] == 'open' ? 'close' : 'open'));\n}\n\n/**\n * @this {HTMLElement}\n */\nfunction hoverBrace() {\n\tfor (var parent = this.parentElement; parent; parent = parent.parentElement) {\n\t\tif (NO_BRACE_HOVER_CLASS.test(parent.className)) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t[this, getPartnerBrace(this)].forEach(function (ele) {\n\t\tele.className = (ele.className.replace(BRACE_HOVER_CLASS, ' ') + ' brace-hover').replace(/\\s+/g, ' ');\n\t});\n}\n/**\n * @this {HTMLElement}\n */\nfunction leaveBrace() {\n\t[this, getPartnerBrace(this)].forEach(function (ele) {\n\t\tele.className = ele.className.replace(BRACE_HOVER_CLASS, ' ');\n\t});\n}\n/**\n * @this {HTMLElement}\n */\nfunction clickBrace() {\n\tfor (var parent = this.parentElement; parent; parent = parent.parentElement) {\n\t\tif (NO_BRACE_SELECT_CLASS.test(parent.className)) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t[this, getPartnerBrace(this)].forEach(function (ele) {\n\t\tele.className = (ele.className.replace(BRACE_SELECTED_CLASS, ' ') + ' brace-selected').replace(/\\s+/g, ' ');\n\t});\n}\n\nPrism.hooks.add('complete', function (env) {\n\n\t/** @type {HTMLElement} */\n\tvar code = env.element;\n\tvar pre = code.parentElement;\n\n\tif (!pre || pre.tagName != 'PRE') {\n\t\treturn;\n\t}\n\n\t// find the braces to match\n\t/** @type {string[]} */\n\tvar toMatch = [];\n\tfor (var ele = code; ele; ele = ele.parentElement) {\n\t\tif (MATCH_ALL_CLASS.test(ele.className)) {\n\t\t\ttoMatch.push('(', '[', '{');\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (toMatch.length == 0) {\n\t\t// nothing to match\n\t\treturn;\n\t}\n\n\tif (!pre.__listenerAdded) {\n\t\t// code blocks might be highlighted more than once\n\t\tpre.addEventListener('mousedown', function removeBraceSelected() {\n\t\t\t// the code element might have been replaced\n\t\t\tvar code = pre.querySelector(Prism.codeTag);\n\t\t\tArray.prototype.slice.call(code.querySelectorAll('.brace-selected')).forEach(function (element) {\n\t\t\t\telement.className = element.className.replace(BRACE_SELECTED_CLASS, ' ');\n\t\t\t});\n\t\t});\n\t\tObject.defineProperty(pre, '__listenerAdded', { value: true });\n\t}\n\n\t/** @type {HTMLSpanElement[]} */\n\tvar punctuation = Array.prototype.slice.call(code.querySelectorAll('span.token.punctuation'));\n\n\t/** @type {{ index: number, open: boolean, element: HTMLElement }[]} */\n\tvar allBraces = [];\n\n\ttoMatch.forEach(function (open) {\n\t\tvar close = PARTNER[open];\n\t\tvar name = NAMES[open];\n\n\t\t/** @type {[number, number][]} */\n\t\tvar pairs = [];\n\t\t/** @type {number[]} */\n\t\tvar openStack = [];\n\n\t\tfor (var i = 0; i < punctuation.length; i++) {\n\t\t\tvar element = punctuation[i];\n\t\t\tif (element.childElementCount == 0) {\n\t\t\t\tvar text = element.textContent;\n\t\t\t\tif (text === open) {\n\t\t\t\t\tallBraces.push({ index: i, open: true, element: element });\n\t\t\t\t\telement.className += ' ' + name;\n\t\t\t\t\telement.className += ' brace-open';\n\t\t\t\t\topenStack.push(i);\n\t\t\t\t} else if (text === close) {\n\t\t\t\t\tallBraces.push({ index: i, open: false, element: element });\n\t\t\t\t\telement.className += ' ' + name;\n\t\t\t\t\telement.className += ' brace-close';\n\t\t\t\t\tif (openStack.length) {\n\t\t\t\t\t\tpairs.push([i, openStack.pop()]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpairs.forEach(function (pair) {\n\t\t\tvar pairId = 'pair-' + (pairIdCounter++) + '-';\n\n\t\t\tvar openEle = punctuation[pair[0]];\n\t\t\tvar closeEle = punctuation[pair[1]];\n\n\t\t\topenEle.id = pairId + 'open';\n\t\t\tcloseEle.id = pairId + 'close';\n\n\t\t\t[openEle, closeEle].forEach(function (ele) {\n\t\t\t\tele.addEventListener('mouseenter', hoverBrace);\n\t\t\t\tele.addEventListener('mouseleave', leaveBrace);\n\t\t\t\tele.addEventListener('click', clickBrace);\n\t\t\t});\n\t\t});\n\t});\n\n\tvar level = 0;\n\tallBraces.sort(function (a, b) { return a.index - b.index; });\n\tallBraces.forEach(function (brace) {\n\t\tif (brace.open) {\n\t\t\tbrace.element.className += ' brace-level-' + (level % LEVEL_WARP + 1);\n\t\t\tlevel++;\n\t\t} else {\n\t\t\tlevel = Math.max(0, level - 1);\n\t\t\tbrace.element.className += ' brace-level-' + (level % LEVEL_WARP + 1);\n\t\t}\n\t});\n\n});\n","import Prism from './prism-core'\n\nPrism.languages.graphviz = {\n  comment: [{\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  'class-name': {\n    pattern: /(\\b(?:digraph|graph)\\s+)\\w+/,\n    lookbehind: true\n  },\n  keyword: /\\b(?:digraph|graph|node|edge)\\b/,\n  property: /\\b(?:Damping|URL|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeURL|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|group|headURL|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelURL|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tail_lp|tailURL|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel)\\b/,\n  constant: /\\b(?:dot|neato|fdp|sfdp|twopi|circo|osage|patchwork|LR|RL|TB|BT|box|polygon|ellipse|oval|circle|point|egg|triangle|plaintext|plain|diamond|trapezium|parallelogram|house|pentagon|hexagon|septagon|octagon|doublecircle|doubleoctagon|tripleoctagon|invtriangle|invtrapezium|invhouse|Mdiamond|Msquare|Mcircle|rect|rectangle|square|star|none|underline|cylinder|note|tab|folder|box3d|component|promoter|cds|terminator|utr|primersite|restrictionsite|fivepoverhang|threepoverhang|noverhang|assembly|signature|insulator|ribosite|rnastab|proteasesite|proteinstab|rpromoter|rarrow|larrow|lpromoter|solid|dashed|dotted|bold|rounded|diagonals|filled|striped|wedged)\\b/,\n  boolean: /\\b(?:true|yes|false|no)\\b/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /->|--|=/,\n  punctuation: /[{}[\\];(),.:]/\n}\n","import { LitElement, html, css, unsafeCSS } from 'lit-element'\nimport mainStyle from './script-editor.css'\nimport { CodeJar } from './codejar/codejar'\nimport Prism from './prism/prism-core'\nimport lightTheme from './prism/prism-light.css'\nimport lineNumbersStyle from './prism/prism-line-numbers.css'\nimport matchBracesStyle from './prism/prism-match-braces.css'\nimport './prism/prism-line-numbers'\nimport './prism/prism-match-braces'\nimport './prism/prism-graphviz'\n\nconst features = ['line-numbers', 'match-braces', 'rainbow-braces']\nconst renderedKey = Symbol('rendered')\nconst jarKey = Symbol('jar')\nconst widthKey = Symbol('width')\nconst heightKey = Symbol('height')\nconst mousedownKey = Symbol('mousedown')\nconst mouseupKey = Symbol('mouseup')\nlet pendingAllLineNumbersUpdate\n\nPrism.codeTag = 'div'\n\nfunction triggerEvent (element, type, detail) {\n  element.dispatchEvent(new CustomEvent(type, { detail }))\n}\n\nfunction getFeatureClasses (element) {\n  return element.class\n    .trim()\n    .split(/\\s+/)\n    .filter(feature => features.includes(feature))\n    .join(' ')\n}\n\nfunction hasChangedFeatureClass (newValue, oldValue) {\n  const newClasses = newValue.trim().split(/\\s+/)\n  const oldClasses = oldValue ? oldValue.trim().split(/\\s+/) : []\n  return features.some(feature =>\n    newClasses.includes(feature) !== oldClasses.includes(feature))\n}\n\nfunction createJar (element) {\n  const ownerRoot = element.shadowRoot\n  const source = ownerRoot.children[0].children[0]\n  const jar = CodeJar(source, Prism.highlightElement, { tab: element.tab, ownerRoot })\n  jar.onUpdate(code => {\n    element.value = code\n    triggerEvent(element, 'input', code)\n  })\n  return jar\n}\n\nclass GraphvizScriptEditorElement extends LitElement {\n  constructor () {\n    super()\n    this.value = ''\n    this.tab = '  '\n    this.class = ''\n  }\n\n  render () {\n    const jar = this[jarKey]\n    if (jar) jar.destroy()\n    return html`<pre id=source-wrapper>\n  <div id=source class=\"language-graphviz ${getFeatureClasses(this)}\">${this.value}</div>\n</pre>`\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    registerEvents(this)\n  }\n\n  disconnectedCallback () {\n    unregisterEvents(this)\n    super.disconnectedCallback()\n  }\n\n  shouldUpdate (changedProperties) {\n    const rendered = this[renderedKey]\n    if (!rendered) return true\n    if (changedProperties.has('class')) return true\n    if (changedProperties.has('value')) {\n      const jar = this[jarKey]\n      const newValue = this.value\n      if (newValue !== jar.toString()) jar.updateCode(newValue)\n    }\n    if (changedProperties.has('tab')) {\n      this[jarKey].updateOptions({ tab: this.tab })\n    }\n    return false\n  }\n\n  updated () {\n    this[jarKey] = createJar(this)\n    this[renderedKey] = true\n  }\n\n  static get properties () {\n    return {\n      value: { type: String, reflect: true },\n      tab: { type: String, reflect: true },\n      class: {\n        type: String,\n        reflect: true,\n        hasChanged (newValue, oldValue) {\n          return hasChangedFeatureClass(newValue, oldValue)\n        }\n      }\n    }\n  }\n\n  static get styles () {\n    return [\n      css`${unsafeCSS(lightTheme)}`,\n      css`${unsafeCSS(lineNumbersStyle)}`,\n      css`${unsafeCSS(matchBracesStyle)}`,\n      css`${unsafeCSS(mainStyle)}`\n    ]\n  }\n}\n\nfunction rememberSize (element) {\n  element[widthKey] = element.clientWidth\n  element[heightKey] = element.clientHeight\n}\n\nfunction updateLineNumbers (element) {\n  const newWidth = element.clientWidth\n  const newHeight = element.clientHeight\n  if (newWidth !== element[widthKey] || newHeight !== element[heightKey]) {\n    Prism.plugins.lineNumbers.updateLineNumbers(element.shadowRoot.children[0])\n    element[widthKey] = newWidth\n    element[heightKey] = newHeight\n  }\n}\n\nfunction registerEvents (element) {\n  const mousedown = element[mousedownKey] = () => rememberSize(element)\n  const mouseup = element[mouseupKey] = () => updateLineNumbers(element)\n  element.addEventListener('mousedown', mousedown)\n  element.addEventListener('mouseup', mouseup)\n}\n\nfunction unregisterEvents (element) {\n  element.removeEventListener('mouseup', element[mouseupKey])\n  element.removeEventListener('mousedown', element[mousedownKey])\n}\n\nfunction updateAllLineNumbers () {\n  clearTimeout(pendingAllLineNumbersUpdate)\n  const editors = document.querySelectorAll('graphviz-script-editor.line-numbers')\n  for (const editor of editors) updateLineNumbers(editor)\n}\n\nfunction scheduleUpdateAllLineNumbers () {\n  if (pendingAllLineNumbersUpdate) clearTimeout(pendingAllLineNumbersUpdate)\n  pendingAllLineNumbersUpdate = setTimeout(updateAllLineNumbers, 300)\n}\n\nwindow.addEventListener('resize', scheduleUpdateAllLineNumbers)\n\ncustomElements.define('graphviz-script-editor', GraphvizScriptEditorElement)\n"],"names":["graphKey","Symbol","scaleKey","delayWorkerLoading","window","graphvizWebComponent","renderer","rendererUrl","wasmFolder","ensureConfiguration","getRenderer","Worker","requestRendering","element","script","receiveResult","addEventListener","localWasmFolder","getAttribute","console","warn","postMessage","graph","undefined","closeRendering","removeEventListener","triggerEvent","type","detail","dispatchEvent","CustomEvent","applyScale","svg","shadowRoot","children","scale","style","transform","transformOrigin","showImage","innerHTML","updateGraph","data","error","message","trim","showError","GraphvizGraphElement","HTMLElement","[object Object]","super","this","attachShadow","mode","value","setAttribute","name","oldValue","newValue","Promise","resolve","reject","observedAttributes","customElements","define","isCEPolyfill","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","result","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","removeAttribute","statics","split","push","tagName","currentNode","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","getHTML","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","_updateState","_instanceProperties","_updatePromise","res","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","_options","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","unsafeCSS","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","_styles","addStyles","reduceRight","unshift","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","delete","CodeJar","editor","highlight","opt","tab","ownerRoot","getSelection","ownerDocument","callback","prev","listeners","history","at","focus","isFirefox","navigator","userAgent","outline","overflowWrap","overflowY","resize","whiteSpace","debounceHighlight","debounce","pos","save","restore","recording","shouldRecord","isUndo","isRedo","startsWith","debounceRecordHistory","recordHistory","on","fn","dir","visit","el","anchorNode","focusNode","anchorOffset","focusOffset","TEXT_NODE","nodeValue","startOffset","endOffset","current","len","setBaseAndExtent","beforeCursor","r0","getRangeAt","r","createRange","selectNodeContents","setEnd","startContainer","toString","afterCursor","setStart","endContainer","lastRecord","splice","visitor","queue","isCtrl","metaKey","ctrlKey","shiftKey","code","replace","execCommand","cb","wait","timeout","args","clearTimeout","setTimeout","findPadding","j","test","substring","preventDefault","defaultPrevented","before","after","padding","newLinePadding","handleNewLine","min","handleTabCharacters","handleJumpToBeginningOfLine","open","close","codeAfter","includes","handleSelfClosingCharacters","record","handleUndoRedo","isComposing","_event","originalEvent","clipboardData","getData","handlePaste","_","lang","uniqueId","codeTag","util","encode","tokens","Token","alias","objId","obj","clone","deepClone","visited","id","getLanguage","className","parentElement","languages","extend","redef","inside","root","grammar","ret","token","newToken","DFS","property","propertyType","plugins","highlightElement","language","env","insertHighlightedCode","highlightedCode","hooks","run","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startPos","oneshot","target","patterns","pattern","lookbehind","greedy","lookbehindLength","global","flags","source","next","tail","to","removeFrom","removeRange","wrapped","list","array","toArray","all","callbacks","matchedStr","newNode","tag","classes","aliases","apply","NEW_LINE_EXP","_resizeElement","codeElement","Prism","lineNumbersWrapper","lineNumberSizer","codeLines","display","line","lineNumber","lineSize","getBoundingClientRect","height","getComputedStyle","currentStyle","pre","addLineNumbers","lineNumbersRegex","linesNum","lines","hasAttribute","counterReset","parseInt","lineNumbers","updateLineNumbers","getLine","number","classList","contains","lineNumberRows","lineNumberStart","lineNumberEnd","lineIndex","MATCH_ALL_CLASS","BRACE_HOVER_CLASS","BRACE_SELECTED_CLASS","NO_BRACE_HOVER_CLASS","NO_BRACE_SELECT_CLASS","PARTNER","(","[","{","NAMES","pairIdCounter","BRACE_ID_PATTERN","getPartnerBrace","brace","hoverBrace","ele","leaveBrace","clickBrace","toMatch","__listenerAdded","punctuation","allBraces","pairs","openStack","childElementCount","pair","pairId","openEle","closeEle","level","sort","a","b","max","graphviz","comment","string","class-name","keyword","constant","boolean","operator","features","renderedKey","jarKey","widthKey","heightKey","mousedownKey","mouseupKey","pendingAllLineNumbersUpdate","createJar","jar","onUpdate","newWidth","clientWidth","newHeight","clientHeight","updateAllLineNumbers","editors","class","destroy","filter","feature","mousedown","rememberSize","mouseup","registerEvents","disconnectedCallback","updateCode","updateOptions","newClasses","oldClasses","some","hasChangedFeatureClass"],"mappings":"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"}