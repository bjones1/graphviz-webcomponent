{"version":3,"file":"graph-bundled.min.mjs","sources":["../src/bundled-engine.js","../src/graph.js"],"sourcesContent":["import rendererScript from '../dist/renderer.min.js'\r\n\r\nlet renderer\r\n\r\nexport default function getRenderer () {\r\n  if (!renderer) {\r\n    const rendererBlob = new Blob([rendererScript], { type: 'application/javascript' })\r\n    const rendererUrl = URL.createObjectURL(rendererBlob)\r\n    renderer = new Worker(rendererUrl)\r\n  }\r\n  return renderer\r\n}\r\n","import getRenderer from './separate-engine'\r\n\r\nconst scaleKey = Symbol('scale')\r\n// Use this to assign a unique ID to each render. Messages with the rendered\r\n// SVG will be received by multiple graphs, if multiple graphs dispatched\r\n// a request for rendering.\r\nlet renderId = 1\r\n\r\nfunction requestRendering (element, script, receiveResult) {\r\n  const renderer = getRenderer()\r\n  renderer.addEventListener('message', receiveResult)\r\n  renderer.postMessage({ script: script || element.graph, renderId })\r\n  return renderId++\r\n}\r\n\r\nfunction closeRendering (receiveResult) {\r\n  const renderer = getRenderer()\r\n  renderer.removeEventListener('message', receiveResult)\r\n}\r\n\r\nfunction triggerEvent (element, type, detail) {\r\n  element.dispatchEvent(new CustomEvent(type, { detail }))\r\n}\r\n\r\nfunction applyScale (element) {\r\n  const svg = element.shadowRoot.children[0]\r\n  const scale = element.scale\r\n  if (svg) {\r\n    if (scale) {\r\n      svg.style.transform = `scale(${scale})`\r\n      svg.style.transformOrigin = 'top left'\r\n    } else {\r\n      svg.style.transform = ''\r\n      svg.style.transformOrigin = ''\r\n    }\r\n  }\r\n}\r\n\r\nfunction showImage (element, svg) {\r\n  element.shadowRoot.innerHTML = svg\r\n  applyScale(element)\r\n  triggerEvent(element, 'render', svg)\r\n}\r\n\r\nfunction showError (element, error) {\r\n  console.error('Graphviz failed:', error)\r\n  element.shadowRoot.innerHTML = error.message\r\n  return triggerEvent(element, 'error', error)\r\n}\r\n\r\nfunction updateGraph (element) {\r\n  return new Promise(resolve => {\r\n    element.shadowRoot.innerHTML = ''\r\n    const script = element.__textContent;\r\n    if (!script) return resolve()\r\n    const assignedRenderId = requestRendering(element, script, receiveResult)\r\n\r\n    function receiveResult ({ data }) {\r\n      const { svg, error, renderId } = data\r\n      // This render was for a different request. Ignore it.\r\n      if (assignedRenderId !== renderId) return\r\n      closeRendering(receiveResult)\r\n      if (error) {\r\n        error.message = error.message.trim()\r\n        showError(element, error)\r\n        return resolve(error)\r\n      }\r\n      showImage(element, svg)\r\n      resolve(svg)\r\n    }\r\n  })\r\n}\r\n\r\nfunction tryUpdateGraph (element, script) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!script) {\r\n      element.innerHTML = ''\r\n      element.shadowRoot.innerHTML = ''\r\n      return resolve()\r\n    }\r\n    const assignedRenderId = requestRendering(element, script, receiveResult)\r\n\r\n    function receiveResult ({ data }) {\r\n      const { svg, error, renderId } = data\r\n      // This render was for a different request. Ignore it.\r\n      if (assignedRenderId !== renderId) return\r\n      closeRendering(receiveResult)\r\n      if (error) return reject(error)\r\n      element.innerHTML = script\r\n      showImage(element, svg)\r\n      resolve(svg)\r\n    }\r\n  })\r\n}\r\n\r\nclass GraphvizGraphElement extends HTMLElement {\r\n  constructor () {\r\n    super()\r\n    this.attachShadow({ mode: 'open' })\r\n    this.graphCompleted = Promise.resolve()\r\n    // From Mermaid web component -- see below.\r\n    this.__renderGraph = this.__renderGraph.bind(this);\r\n  }\r\n\r\n  get scale () { return this[scaleKey] }\r\n  set scale (value) { this.setAttribute('scale', value) }\r\n\r\n  attributeChangedCallback (name, oldValue, newValue) {\r\n    switch (name) {\r\n      case 'scale':\r\n        this[scaleKey] = newValue\r\n        applyScale(this)\r\n    }\r\n  }\r\n\r\n  tryGraph (graph) {\r\n    const promise = tryUpdateGraph(this, graph)\r\n    this.graphCompleted = promise.catch(error => error)\r\n    return promise\r\n  }\r\n\r\n  static get observedAttributes () { return ['scale'] }\r\n\r\n  __renderGraph() {\r\n    this.graphCompleted = updateGraph(this).catch(error => error)\r\n  }\r\n\r\n  // Copied from https://github.com/manolakis/wc-mermaid/blob/master/src/WcMermaid.js:\r\n  /**\r\n   * @returns {ChildNode[]}\r\n   * @private\r\n   */\r\n  get __textNodes() {\r\n    return Array.from(this.childNodes).filter(\r\n      node => node.nodeType === this.TEXT_NODE\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  get __textContent() {\r\n    return this.__textNodes.map(node => node.textContent?.trim()).join('');\r\n  }\r\n\r\n    __observeTextNodes() {\r\n    if (this.__textNodeObservers) {\r\n      this.__cleanTextNodeObservers();\r\n    }\r\n\r\n    this.__textNodeObservers = this.__textNodes.map(textNode => {\r\n      const observer = new MutationObserver(this.__renderGraph);\r\n\r\n      observer.observe(textNode, { characterData: true });\r\n\r\n      return observer;\r\n    });\r\n  }\r\n\r\n  __cleanTextNodeObservers() {\r\n    if (this.__textNodeObservers) {\r\n      this.__textNodeObservers.forEach(observer => observer.disconnect());\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.__observer = new MutationObserver(() => {\r\n      this.__observeTextNodes();\r\n      this.__renderGraph();\r\n    });\r\n    this.__observer.observe(this, { childList: true });\r\n    this.__observeTextNodes();\r\n    this.__renderGraph();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.__cleanTextNodeObservers();\r\n\r\n    if (this.__observer) {\r\n      this.__observer.disconnect();\r\n      this.__observer = null;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('graphviz-graph', GraphvizGraphElement)\r\n\r\nexport default GraphvizGraphElement\r\n"],"names":[],"mappings":"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"}